var searchIndex = {};
searchIndex["exoquant"] = {"doc":"Exoquant is a very high quality image quantization library featuring code for basic\ncolor quantization, K-Means palette optimization and remapping and dithering with\nFloyd-Steinberg and ordered ditherers.","items":[[3,"Color","exoquant","A RGBA8 color used for both the input image data and the palette output.",null,null],[12,"r","","",0,null],[12,"g","","",0,null],[12,"b","","",0,null],[12,"a","","",0,null],[3,"Colorf","","A color with floating point channel components.",null,null],[12,"r","","",1,null],[12,"g","","",1,null],[12,"b","","",1,null],[12,"a","","",1,null],[3,"ColorMap","","A data structure for fast nearest color lookups in a palette.",null,null],[3,"SimpleColorSpace","","The default colorspace implementation.",null,null],[12,"gamma","","",2,null],[12,"dither_gamma","","",2,null],[12,"transparency_scale","","",2,null],[12,"scale","","",2,null],[3,"Histogram","","A histogram that counts the number of times each color occurs in the input image data.",null,null],[3,"ColorCount","","A single float color in quantization color space with the number of times it occurs in the\ninput image data.",null,null],[12,"color","","",3,null],[12,"count","","",3,null],[3,"Quantizer","","The main color quantizer state.",null,null],[3,"Remapper","","A helper type to very slightly simplify remapping images using a `Ditherer`.",null,null],[5,"convert_to_indexed","","A convenience function to simply quantize an image with sensible defaults.",null,null],[5,"generate_palette","","A convenience function to just generate a palette from a historam with sensible defaults.",null,{"inputs":[{"name":"histogram"},{"name":"c"},{"name":"o"},{"name":"usize"}],"output":{"name":"vec"}}],[5,"sort_palette","","Sort neighboring colors in the image to be neighbors in the palette as well.",null,null],[11,"hash","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"new","","Creates a new `Color` from the given channel components.",0,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"color"}}],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"colorf"}}],[11,"zero","","Returns a `Colorf` with all channel components set to zero.",1,{"inputs":[],"output":{"name":"colorf"}}],[11,"dot","","Returns the dot product of two `Colorf`s.",1,null],[11,"abs","","Returns the magnitude (vector length) of a `Colorf`.",1,null],[11,"pow","","Returns a new `Colorf` with each color component raised to the given power.",1,null],[11,"add","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"mul","","",1,null],[11,"div","","",1,null],[11,"clone","","",3,null],[11,"new","","Returns a new, empty `Histogram`.",4,{"inputs":[],"output":{"name":"histogram"}}],[11,"to_color_counts","","Converts the rgba8 `Histogram` to a Vec of `ColorCount` in quantization color space.",4,null],[11,"iter","","Returns an iterator over the histogram data.",4,null],[11,"extend","","",4,null],[11,"from_iter","","",4,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"new","","Create a new Quantizer state for the given histogram.",5,{"inputs":[{"name":"histogram"},{"name":"t"}],"output":{"name":"quantizer"}}],[11,"create_palette","","A shortcut function to directly create a palette from a histogram.",5,{"inputs":[{"name":"histogram"},{"name":"t"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"num_colors","","Returns the current number of colors in this Quantizer state.",5,null],[11,"step","","Run one quantization step which increases the `num_colors()` by one.",5,null],[11,"colors","","Returns colors the current Quantizer state represents..",5,null],[11,"optimize","","Run a number of K-Means iteration on the current quantizer state.",5,null],[11,"new","","Create a `ColorMap` from a slice of `Color`s.",6,null],[11,"from_float_colors","","Create a `ColorMap` from float colors.",6,{"inputs":[{"name":"vec"}],"output":{"name":"colormap"}}],[11,"find_nearest","","Returns the index of the nearest color in the palette.",6,null],[11,"neighbor_distance","","Returns the distance to the closest neighbor color of a palette entry given by index.",6,null],[11,"neighbors","","Returns the list of neighbors (as indices) for a palette color given by index.",6,null],[11,"float_color","","Returns the palette color for the given index.",6,null],[11,"num_colors","","Returns the number of colors in the palette.",6,null],[11,"new","","Create a new Remapper instance for the given palette, colorspace and ditherer.",7,null],[11,"remap","","Remap and dither a `&amp;[Color]` to a `Vec&lt;u8&gt;`.",7,null],[11,"remap_usize","","Remap and dither a `&amp;[Color]` to a `Vec&lt;usize&gt;`.",7,null],[11,"remap_iter","","Remap and dither a `Box&lt;Iterator&lt;Item = Color&gt;&gt;` to a `Box&lt;Iterator&lt;Item = u8&gt;&gt;`.",7,null],[11,"remap_iter_usize","","Remap and dither a `Box&lt;Iterator&lt;Item = Color&gt;&gt;` to a `Box&lt;Iterator&lt;Item = usize&gt;&gt;`.",7,null],[0,"optimizer","","K-Means optimization",null,null],[3,"None","exoquant::optimizer","A No-op Optimizer implementation.",null,null],[3,"KMeans","","A standard K-Means Optimizer.",null,null],[3,"WeightedKMeans","","A slightly experimental Optimizer that improves color representation in dithered images.",null,null],[8,"Optimizer","","An interface for K-Means optimizers.",null,null],[10,"step","","Do one K-Means optimization step and return colors that better represent the histogram.",8,null],[11,"optimize_palette","","Optimize a given palette with a number of K-Means iteration.",8,null],[11,"is_noop","","Returns whether this Optimizer is a No-op implementation.",8,null],[11,"step","","",9,null],[11,"is_noop","","",9,null],[11,"step","","",10,null],[11,"step","","",11,null],[11,"default","exoquant","",2,{"inputs":[],"output":{"name":"simplecolorspace"}}],[11,"to_linear","","",2,null],[11,"from_linear","","",2,null],[11,"to_dither","","",2,null],[11,"from_dither","","",2,null],[0,"ditherer","","Dithered remapping",null,null],[3,"None","exoquant::ditherer","A Ditherer that simply remaps each pixel to the nearest palette index without any actual\ndithering.",null,null],[3,"Ordered","","A 2x2 ordered dithering.",null,null],[3,"FloydSteinberg","","A few variants of a Floyd-Steinberg ditherer.",null,null],[8,"Ditherer","","An interface for dithered color remapping.",null,null],[10,"remap","","Remaps an iterator of input pixel (float-)colors of an Image to an Iterator of palette\nindices.",12,null],[11,"remap","","",13,null],[11,"remap","","",14,null],[11,"new","","Returns a floyd-steinberg variant that reduces color bleeding.",15,{"inputs":[],"output":{"name":"floydsteinberg"}}],[11,"vanilla","","Returns a vanilla floyd-steinberg ditherer as originally described.",15,{"inputs":[],"output":{"name":"floydsteinberg"}}],[11,"checkered","","Returns a modified floyd-steinber ditherer slightly favoring checker board patterns.",15,{"inputs":[],"output":{"name":"floydsteinberg"}}],[11,"remap","","",15,null],[8,"ColorSpace","exoquant","Defines the colorspaces in which to do quantization and remapping",null,null],[10,"to_linear","","",16,null],[10,"from_linear","","",16,null],[11,"to_dither","","",16,null],[11,"from_dither","","",16,null],[11,"to_float","","",16,null],[11,"from_float","","",16,null],[11,"to_dither","","",16,null],[11,"from_dither","","",16,null],[11,"to_float","","",16,null],[11,"from_float","","",16,null]],"paths":[[3,"Color"],[3,"Colorf"],[3,"SimpleColorSpace"],[3,"ColorCount"],[3,"Histogram"],[3,"Quantizer"],[3,"ColorMap"],[3,"Remapper"],[8,"Optimizer"],[3,"None"],[3,"KMeans"],[3,"WeightedKMeans"],[8,"Ditherer"],[3,"None"],[3,"Ordered"],[3,"FloydSteinberg"],[8,"ColorSpace"]]};
initSearch(searchIndex);
